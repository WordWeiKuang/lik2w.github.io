<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kw26</title>
  <icon>https://www.gravatar.com/avatar/c32b987f058e1b8dd178879d6dba8d47</icon>
  <subtitle>这个人很懒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="kw26.github.io/"/>
  <updated>2019-01-03T03:05:48.285Z</updated>
  <id>kw26.github.io/</id>
  
  <author>
    <name>kw26</name>
    <email>kuangwei@kw26.org</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flask celery</title>
    <link href="kw26.github.io/2019/01/03/flask_celery/"/>
    <id>kw26.github.io/2019/01/03/flask_celery/</id>
    <published>2019-01-03T01:20:11.803Z</published>
    <updated>2019-01-03T03:05:48.285Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://celeryproject.org" target="_blank" rel="noopener">Celery</a> 是一个开源的分布任务队列， 执行某些耗时较长的工作时，可以使用Celery在后台执行，而接口只需返回202即可。</p><h2 id="安装celery"><a href="#安装celery" class="headerlink" title="安装celery"></a>安装celery</h2><p>使用redis作为celery的储存后端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install redis-server</span><br></pre></td></tr></table></figure></p><p>启动redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure></p><p>安装celery<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install celery</span><br><span class="line">pip install redis</span><br></pre></td></tr></table></figure></p><h2 id="编写一个task"><a href="#编写一个task" class="headerlink" title="编写一个task"></a>编写一个task</h2><p>app.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> celery <span class="keyword">import</span> Celery</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_celery</span><span class="params">(app)</span>:</span></span><br><span class="line">    celery = Celery(</span><br><span class="line">        app.import_name,</span><br><span class="line">        backend = app.config[<span class="string">'CELERY_RESULT_BACKEND'</span>],</span><br><span class="line">        broker = app.config[<span class="string">'CELERY_BROKER_URL'</span>]</span><br><span class="line">    )</span><br><span class="line">    celery.conf.update(app.config)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ContextTask</span><span class="params">(celery.Task)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">            <span class="keyword">with</span> app.app_context():</span><br><span class="line">                <span class="keyword">return</span> self.run(*args, **kwargs)</span><br><span class="line"></span><br><span class="line">    celery.Task = ContextTask</span><br><span class="line">    <span class="keyword">return</span> celery</span><br><span class="line">    </span><br><span class="line">flask_app = Flask(__name__)</span><br><span class="line">flask_app.config.update(</span><br><span class="line">    CELERY_BROKER_URL = <span class="string">'redis://localhost:6379'</span>,</span><br><span class="line">    CELERY_RESULT_BACKEND = <span class="string">'redis://localhost:6379'</span></span><br><span class="line">)</span><br><span class="line">celery = make_celery(flask_app)</span><br><span class="line"></span><br><span class="line"><span class="meta">@celery.task()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br></pre></td></tr></table></figure></p><h2 id="启动celery"><a href="#启动celery" class="headerlink" title="启动celery"></a>启动celery</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ celery -A app worker --loglevel=info</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python3</span><br><span class="line">&gt;&gt;&gt;from app import add</span><br><span class="line">&gt;&gt;&gt;res = add.delay(4, 3)</span><br><span class="line">&gt;&gt;&gt;res.get()</span><br><span class="line">7</span><br></pre></td></tr></table></figure><p>参考：<a href="http://flask.pocoo.org/docs/1.0/patterns/celery/" target="_blank" rel="noopener">http://flask.pocoo.org/docs/1.0/patterns/celery/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://celeryproject.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Celery&lt;/a&gt; 是一个开源的分布任务队列， 执行某些耗时较长的工作时，可以使用Celery在后台执行，而接口只需返回202即可。&lt;/p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="kw26.github.io/2018/09/28/hello-world/"/>
    <id>kw26.github.io/2018/09/28/hello-world/</id>
    <published>2018-09-28T04:02:05.321Z</published>
    <updated>2018-08-08T02:20:59.863Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
