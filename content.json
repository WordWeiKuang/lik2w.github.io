{"meta":{"title":"kw26","subtitle":"这个人很懒","description":"web全沾","author":"kw26","url":"kw26.github.io"},"pages":[],"posts":[{"title":"20岁生日快乐！","slug":"tomyself","date":"2019-01-11T01:43:55.780Z","updated":"2019-01-11T01:51:02.897Z","comments":true,"path":"2019/01/11/tomyself/","link":"","permalink":"kw26.github.io/2019/01/11/tomyself/","excerpt":"","text":"20岁的我时光飞逝（这个开头，哈哈先自己吐槽一下，语文老师要气死了;-) 我已经20了。 首先要感谢大家感谢大家20多年来对我的照顾，感谢我的家人（太多了），特别感谢我的梁哥（这个人小学就带我带我打DOTA），还有老师和同学们（我真的不是在写获奖感言啊！！ 😂）我最亲爱的小伙伴们（Erey、ZFF、jojo）还有一些人，哼就不告诉你们是谁（不好意思写了 害羞羞）还有今天来陪我过生日的小伙伴们！ 近来的状况2018年的我拍完了毕业照，结束了我的校园生活。开始了搬砖敲代码并成为了一名程序猿（我可是全栈工程师啊xd 不！是全沾！）所以我开始用Markdown写东西。我学了一点点python和一些js，希望能用自己的所学技术为人类做出一些贡献（向Kennethreitz致敬！。我还未离开校园，现在和工作室的学弟学妹们一起工作，虽然工作历程坎坎坷坷，我也开始学着把管理自己的小团队，但是他们还是很可爱的，我也能和他们一起学习，希望将来有一天能有自己的公司。 之后要做的事情其实大家不是咸鱼也不是没有梦想，只是想要做的事情很多，目前还没有能力完成。我相信一点一点的去作，就能把事情一件一件的完成。所以我要列个单子！真的相信我（todo是不可能完成的，哈哈🙃） TODO 很现实我要赚钱（具体一点？那就…定个小目标先赚他… 算了算了 保持和人的交流（告诉我不要自闭了好吗，去和妹子们聊天吧，游戏有什么好玩的！ 真香 把驾照考了（真的不脱了，我现在就去预约科目1 自己一个人住（太好了 自己做饭吃（坚持一下，等吃久了自己做的黑暗料理就习惯了 养只宠物吧（听说这有助于管理自己 保持运动（别偷懒了，冬天太冷，夏天太热，错的是深圳！ 到一個地方, 不一樣的地方, 不相同的地方, 到這個地方，可以瞧一瞧, 很多，很多（滚！去旅游 最后祝自己生日快乐！都快12点了，先不写了哈😘","categories":[],"tags":[]},{"title":"实习总结","slug":"t","date":"2019-01-03T08:57:38.808Z","updated":"2019-01-11T01:49:04.326Z","comments":true,"path":"2019/01/03/t/","link":"","permalink":"kw26.github.io/2019/01/03/t/","excerpt":"","text":"经过了在学校的几年学习，我已经能够作为一名软件工程师并且完成开发工作。时光飞逝，5年的时间一跃而过，作为一名互联网的开发者、建设者，我与大家一样有着美好的愿景，希望能够在如今互联网时代，为社会和互联网献出自己的一份力量。在学校的课堂上，我学会了如何开发，学会了java、php、javaScript，如何自己开发一款软件，自做一个网站，以及如何操作linux服务器。后来，来到了实训工作室，在这里，开发技能成为了工作的基础，在这里我学到了如何在多人团队中开发项目，以及如何使用git进行代码管理，如何使用语义化版本进行版本控制等等。感谢院校和系部能够提供校企合作的工作环境，让我们能够在真实的工作环境中学习。 而来到企业之后，专业的知识技术仅是我们完成工作的基础工具。在企业里工作与在工作室里工作还是有着很大的区别的。最明显的就是我们的工作效率和工作质量的差距，在企业工作的日子里，我的工作效率有了极大的提升，在工作室需要耗时一个月的工作，在企业里可能两周就完成了。而工作质量也明显比工作室同学们一起完成的要高了很多，我发现造成这一区别的主要原因：一是沟通，沟通和会议是非常频繁的，工程师们针对每一个工作任务会进行深度的分析与讨论，以避免不必要的开发，同时在开发中会有密切的交流，遇到了问题会及时抛出来大家一起解决。二是工作规范，在企业里，有着更成熟的工作规范和工作流程，只要开发时按照规范和流程来进行，项目的进行基本不会出现卡顿。三是项目的管理人员，项目的策划和项目经理是一个必不可少的角色，项目的规范和工作任务将由他们来进行控制，大家工作不会迷失方向也是重要的一点，最后才是技术水平，在学校，大家的仅能水平各有高低，这也是因为同学们的兴趣和方向各有不同所造成的，在企业里，没有扎实的基础是难以胜任专业的工作的，大家都会为了提升自身的能力而不断的学习新技术。 在企业里几乎用不到在学校学的“旧”技术架构，互联网行业的发展迅速，新的技术也是层出不穷，从09年node.js发布开始，前端开发就发生了巨大的变革，我们还在学习基础javascript和jquery时，react、vue、angular已经掀起新的浪潮，现如今如果不懂这三大框架中的其一，都不敢说自己是web开发者了。相对前端来说，后端的变革相对稳定，jsp和.net技术早已失去了市场；java的SSH、SSM也成为主流，spring的集成以及springboot的诞生，使得spring成为了另一种标准库；被大数据、AI掀起热潮的Pyhon也渐渐平息。我在校的时间里，后端经历了从MVC到微服务的技术演变，前后端的分离使得后端仅需提供接口，从而诞生了restful API风格/规范并成为主流。 虽然说技术的本质是不会改变的，只要在学校能学号技术，在企业里也能够很快的适应上手新的技术。但是，这会使我们在寻找工作时失去一部分竞争力，毕竟企业是以生成力为核心的，少有企业会花过多的时间来培养新人，因为互联网行业是一个跳槽频繁的行业，如果在毕业时就有和市场人才一样的专业技术栈的还，将会有很大的优势。 在这个行业里，只有不断的学习，才不会被抛弃。在完成工作的同时，也要学习新的知识，提升自己的技能。作为一名即将走入社会的开发者，应该不骄不躁，脚踏实地的积累经验和技术，当然也要怀着梦想去工作，希望能够为开源技术做出自己的贡献，为人类进步做出小的贡献！ 我在学校的这几年，见证了VR、区块链、大数据/人工智能、O2O等新技术的诞生到掀起一次次浪潮，再到现在淡出我们的眼球。也经历了大众创业，万众创新的创客时代。但是互联网行业依旧热门，依旧充满了机遇和挑战！","categories":[],"tags":[]},{"title":"Flask celery","slug":"flask_celery","date":"2019-01-03T01:20:11.803Z","updated":"2019-01-03T03:05:48.285Z","comments":true,"path":"2019/01/03/flask_celery/","link":"","permalink":"kw26.github.io/2019/01/03/flask_celery/","excerpt":"","text":"Celery 是一个开源的分布任务队列， 执行某些耗时较长的工作时，可以使用Celery在后台执行，而接口只需返回202即可。 安装celery使用redis作为celery的储存后端1$ sudo apt-get install redis-server 启动redis1redis-server 安装celery12pip install celerypip install redis 编写一个taskapp.py1234567891011121314151617181920212223242526272829from flask import Flaskfrom celery import Celerydef make_celery(app): celery = Celery( app.import_name, backend = app.config['CELERY_RESULT_BACKEND'], broker = app.config['CELERY_BROKER_URL'] ) celery.conf.update(app.config) class ContextTask(celery.Task): def call(self, *args, **kwargs): with app.app_context(): return self.run(*args, **kwargs) celery.Task = ContextTask return celery flask_app = Flask(__name__)flask_app.config.update( CELERY_BROKER_URL = 'redis://localhost:6379', CELERY_RESULT_BACKEND = 'redis://localhost:6379')celery = make_celery(flask_app)@celery.task()def add(a, b): return a + b 启动celery1$ celery -A app worker --loglevel=info 测试12345$ python3&gt;&gt;&gt;from app import add&gt;&gt;&gt;res = add.delay(4, 3)&gt;&gt;&gt;res.get()7 参考：http://flask.pocoo.org/docs/1.0/patterns/celery/","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-09-28T04:02:05.321Z","updated":"2018-08-08T02:20:59.863Z","comments":true,"path":"2018/09/28/hello-world/","link":"","permalink":"kw26.github.io/2018/09/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}