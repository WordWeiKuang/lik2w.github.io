{"meta":{"title":"kw26","subtitle":"这个人很懒","description":"web全沾","author":"kw26","url":"kw26.github.io"},"pages":[],"posts":[{"title":"Flask celery","slug":"flask_celery","date":"2019-01-03T01:20:11.803Z","updated":"2019-01-03T03:05:48.285Z","comments":true,"path":"2019/01/03/flask_celery/","link":"","permalink":"kw26.github.io/2019/01/03/flask_celery/","excerpt":"","text":"Celery 是一个开源的分布任务队列， 执行某些耗时较长的工作时，可以使用Celery在后台执行，而接口只需返回202即可。 安装celery使用redis作为celery的储存后端1$ sudo apt-get install redis-server 启动redis1redis-server 安装celery12pip install celerypip install redis 编写一个taskapp.py1234567891011121314151617181920212223242526272829from flask import Flaskfrom celery import Celerydef make_celery(app): celery = Celery( app.import_name, backend = app.config['CELERY_RESULT_BACKEND'], broker = app.config['CELERY_BROKER_URL'] ) celery.conf.update(app.config) class ContextTask(celery.Task): def call(self, *args, **kwargs): with app.app_context(): return self.run(*args, **kwargs) celery.Task = ContextTask return celery flask_app = Flask(__name__)flask_app.config.update( CELERY_BROKER_URL = 'redis://localhost:6379', CELERY_RESULT_BACKEND = 'redis://localhost:6379')celery = make_celery(flask_app)@celery.task()def add(a, b): return a + b 启动celery1$ celery -A app worker --loglevel=info 测试12345$ python3&gt;&gt;&gt;from app import add&gt;&gt;&gt;res = add.delay(4, 3)&gt;&gt;&gt;res.get()7 参考：http://flask.pocoo.org/docs/1.0/patterns/celery/","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-09-28T04:02:05.321Z","updated":"2018-08-08T02:20:59.863Z","comments":true,"path":"2018/09/28/hello-world/","link":"","permalink":"kw26.github.io/2018/09/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}